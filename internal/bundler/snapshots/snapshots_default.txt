TestArgumentDefaultValueScopeNoBundle
---------- /out.js ----------
export function a(o = foo) {
  var r;
  return o;
}
export class b {
  fn(o = foo) {
    var r;
    return o;
  }
}
export let c = [
  function(o = foo) {
    var r;
    return o;
  },
  (o = foo) => {
    var r;
    return o;
  },
  {fn(o = foo) {
    var r;
    return o;
  }},
  class {
    fn(o = foo) {
      var r;
      return o;
    }
  }
];

================================================================================
TestArgumentsSpecialCaseNoBundle
---------- /out.js ----------
(() => {
  var r;
  function t(n = arguments) {
    return arguments;
  }
  (function(n = arguments) {
    return arguments;
  });
  ({foo(n = arguments) {
    return arguments;
  }});
  class u {
    foo(n = arguments) {
      return arguments;
    }
  }
  (class {
    foo(n = arguments) {
      return arguments;
    }
  });
  function t(n = arguments) {
    var arguments;
    return arguments;
  }
  (function(n = arguments) {
    var arguments;
    return arguments;
  });
  ({foo(n = arguments) {
    var arguments;
    return arguments;
  }});
  class e {
    foo(n = arguments) {
      var arguments;
      return arguments;
    }
  }
  (class {
    foo(n = arguments) {
      var arguments;
      return arguments;
    }
  });
  (n) => r;
  () => r;
  async () => r;
  (n = r) => r;
  async (n = r) => r;
  (n) => r;
  () => r;
  async () => r;
  (n = r) => r;
  async (n = r) => r;
  (n) => {
    return r;
  };
  () => {
    return r;
  };
  async () => {
    return r;
  };
  (n = r) => {
    return r;
  };
  async (n = r) => {
    return r;
  };
  (n) => {
    return r;
  };
  () => {
    return r;
  };
  async () => {
    return r;
  };
  (n = r) => {
    return r;
  };
  async (n = r) => {
    return r;
  };
})();

================================================================================
TestArrowFnScope
---------- /out.js ----------
// /entry.js
tests = {
  0: (s = (e) => s + e, t) => s + t,
  1: (s, t = (e) => t + e) => t + s,
  2: (s = (a = (c) => s + a + c, b) => s + a + b, t, e) => s + t + e,
  3: (s, t, e = (a, b = (c) => e + b + c) => e + b + a) => e + s + t,
  4: (x = (s) => x + s, y, x + y),
  5: (y, x = (s) => x + s, x + y),
  6: (x = (s = (e) => x + s + e, t) => x + s + t, y, z, x + y + z),
  7: (y, z, x = (s, t = (e) => x + t + e) => x + t + s, x + y + z)
};

================================================================================
TestAutoExternal
---------- /out/entry.js ----------
// /entry.js
import "http://example.com/code.js";
import "https://example.com/code.js";
import "//example.com/code.js";
import "data:application/javascript;base64,ZXhwb3J0IGRlZmF1bHQgMTIz";

================================================================================
TestAvoidTDZNoBundle
---------- /out.js ----------
var Foo = class Foo {
  static foo = new Foo();
};
var foo = Foo.foo;
console.log(foo);
export var Bar = class Bar {
};
export var bar = 123;

================================================================================
TestCommonJSFromES6
---------- /out.js ----------
// /foo.js
var require_foo = __commonJS((exports) => {
  __export(exports, {
    foo: () => foo2
  });
  function foo2() {
    return "foo";
  }
});

// /bar.js
var require_bar = __commonJS((exports) => {
  __export(exports, {
    bar: () => bar2
  });
  function bar2() {
    return "bar";
  }
});

// /entry.js
const {foo} = require_foo();
console.log(foo(), bar());
const {bar} = require_bar();

================================================================================
TestDeduplicateCommentsInBundle
---------- /out.js ----------
console.log("in a");console.log("in b");console.log("in c");
//! Copyright notice 1
//! Copyright notice 2

================================================================================
TestDirectEvalTaintingNoBundle
---------- /out.js ----------
function test1() {
  function add(n, t) {
    return n + t;
  }
  eval("add(1, 2)");
}
function test2() {
  function n(t, e) {
    return t + e;
  }
  (0, eval)("add(1, 2)");
}
function test3() {
  function n(t, e) {
    return t + e;
  }
}
function test4(eval) {
  function add(n, t) {
    return n + t;
  }
  eval("add(1, 2)");
}
function test5() {
  function containsDirectEval() {
    eval();
  }
  if (true) {
    var shouldNotBeRenamed;
  }
}

================================================================================
TestDotImport
---------- /out.js ----------
// /index.js
var require_index = __commonJS((exports) => {
  exports.x = 123;
});

// /entry.js
const _ = __toModule(require_index());
console.log(_.x);

================================================================================
TestDynamicImportWithTemplateIIFE
---------- /out.js ----------
(() => {
  // /b.js
  var require_b = __commonJS((exports) => {
    exports.x = 123;
  });

  // /a.js
  Promise.resolve().then(() => __toModule(require_b())).then((ns) => console.log(ns));
  Promise.resolve().then(() => __toModule(require_b())).then((ns) => console.log(ns));
})();

================================================================================
TestES6FromCommonJS
---------- /out.js ----------
// /foo.js
var require_foo = __commonJS((exports) => {
  exports.foo = function() {
    return "foo";
  };
});

// /bar.js
var require_bar = __commonJS((exports) => {
  exports.bar = function() {
    return "bar";
  };
});

// /entry.js
const foo = __toModule(require_foo());
const bar = __toModule(require_bar());
console.log(foo.foo(), bar.bar());

================================================================================
TestExportChain
---------- /out.js ----------
// /bar.js
const c = 123;
export {
  c as a
};

================================================================================
TestExportFSNode
---------- /out.js ----------
// /entry.js
import * as fs from "fs";
import {readFileSync} from "fs";
export {
  fs,
  readFileSync
};

================================================================================
TestExportFSNodeInCommonJSModule
---------- /out.js ----------
// /entry.js
import * as fs from "fs";
import {readFileSync} from "fs";
var require_entry = __commonJS((exports) => {
  __export(exports, {
    fs: () => fs,
    readFileSync: () => readFileSync
  });
  exports.foo = 123;
});
export default require_entry();

================================================================================
TestExportFormsCommonJS
---------- /out.js ----------
// /commonjs.js
var require_commonjs = __commonJS((exports) => {
  __export(exports, {
    C: () => Class,
    Class: () => Class,
    Fn: () => Fn,
    abc: () => abc,
    b: () => b_exports,
    c: () => c,
    default: () => commonjs_default,
    l: () => l,
    v: () => v
  });
  var commonjs_default = 123;
  var v = 234;
  let l = 234;
  const c = 234;
  function Fn() {
  }
  class Class {
  }
});

// /c.js
var require_c = __commonJS((exports) => {
  __export(exports, {
    default: () => c_default
  });
  class c_default {
  }
});

// /d.js
var require_d = __commonJS((exports) => {
  __export(exports, {
    default: () => Foo
  });
  class Foo {
  }
  Foo.prop = 123;
});

// /e.js
var require_e = __commonJS((exports) => {
  __export(exports, {
    default: () => e_default
  });
  function e_default() {
  }
});

// /f.js
var require_f = __commonJS((exports) => {
  __export(exports, {
    default: () => foo
  });
  function foo() {
  }
  foo.prop = 123;
});

// /g.js
var require_g = __commonJS((exports) => {
  __export(exports, {
    default: () => g_default
  });
  async function g_default() {
  }
});

// /h.js
var require_h = __commonJS((exports) => {
  __export(exports, {
    default: () => foo
  });
  async function foo() {
  }
  foo.prop = 123;
});

// /a.js
const abc = void 0;

// /b.js
const b_exports = {};
__export(b_exports, {
  xyz: () => xyz
});
const xyz = null;

// /entry.js
require_commonjs();
require_c();
require_d();
require_e();
require_f();
require_g();
require_h();

================================================================================
TestExportFormsES6
---------- /out.js ----------
// /a.js
const abc = void 0;

// /b.js
const b_exports = {};
__export(b_exports, {
  xyz: () => xyz
});
const xyz = null;

// /entry.js
var entry_default = 123;
var v = 234;
let l = 234;
const c = 234;
function Fn() {
}
class Class {
}
export {
  Class as C,
  Class,
  Fn,
  abc,
  b_exports as b,
  c,
  entry_default as default,
  l,
  v
};

================================================================================
TestExportFormsIIFE
---------- /out.js ----------
var moduleName = (() => {
  // /entry.js
  var require_entry = __commonJS((exports) => {
    __export(exports, {
      C: () => Class,
      Class: () => Class,
      Fn: () => Fn,
      abc: () => abc,
      b: () => b_exports,
      c: () => c,
      default: () => entry_default,
      l: () => l,
      v: () => v
    });
    var entry_default = 123;
    var v = 234;
    let l = 234;
    const c = 234;
    function Fn() {
    }
    class Class {
    }
  });

  // /a.js
  const abc = void 0;

  // /b.js
  const b_exports = {};
  __export(b_exports, {
    xyz: () => xyz
  });
  const xyz = null;
  return require_entry();
})();

================================================================================
TestExportFormsWithMinifyIdentifiersAndNoBundle
---------- /out/a.js ----------
export default 123;
export var varName = 234;
export let letName = 234;
export const constName = 234;
function o() {
}
class s {
}
export {Class as Cls, o as Fn2, s as Cls2};
export function Func() {
}
export class Class {
}
export * from "./a";
export * as fromB from "./b";

---------- /out/b.js ----------
export default function() {
}

---------- /out/c.js ----------
export default function o() {
}

---------- /out/d.js ----------
export default class {
}

---------- /out/e.js ----------
export default class o {
}

================================================================================
TestExportWildcardFSNodeCommonJS
---------- /out.js ----------
// /entry.js
__exportStar(exports, __toModule(require("fs")));

================================================================================
TestExportWildcardFSNodeES6
---------- /out.js ----------
// /entry.js
export * from "fs";

================================================================================
TestExportsAndModuleFormatCommonJS
---------- /out.js ----------
// /foo/test.js
const test_exports = {};
__export(test_exports, {
  foo: () => foo
});
let foo = 123;

// /bar/test.js
const test_exports2 = {};
__export(test_exports2, {
  bar: () => bar
});
let bar = 123;

// /entry.js
console.log(exports, module.exports, test_exports, test_exports2);

================================================================================
TestExternalModuleExclusionPackage
---------- /out.js ----------
// /index.js
import {S3} from "aws-sdk";
import {DocumentClient} from "aws-sdk/clients/dynamodb";
const s3 = new S3();
const dynamodb2 = new DocumentClient();
export {
  dynamodb2 as dynamodb,
  s3
};

================================================================================
TestExternalModuleExclusionRelativePath
---------- /Users/user/project/out/index.js ----------
// /Users/user/project/src/nested/folder/test.js
import foo2 from "../src/nested/folder/foo.js";
import out from "./in-out-dir.js";
import sha256 from "../src/sha256.min.js";
import config from "/api/config?a=1&b=2";
console.log(foo2, out, sha256, config);

================================================================================
TestFalseRequire
---------- /out.js ----------
// /entry.js
((require2) => require2("/test.txt"))();

================================================================================
TestHashbangBundle
---------- /out.js ----------
#!/usr/bin/env a

// /code.js
const code = 0;

// /entry.js
process.exit(code);

================================================================================
TestHashbangNoBundle
---------- /out.js ----------
#!/usr/bin/env node
process.exit(0);

================================================================================
TestIIFE_ES5
---------- /out.js ----------
(function() {
  // /entry.js
  console.log("test");
})();

================================================================================
TestImportFSNodeCommonJS
---------- /out.js ----------
// /entry.js
const fs = __toModule(require("fs"));
const fs2 = __toModule(require("fs"));
const fs3 = __toModule(require("fs"));
const fs4 = __toModule(require("fs"));
console.log(fs2, fs4.readFileSync, fs3.default);

================================================================================
TestImportFSNodeES6
---------- /out.js ----------
// /entry.js
import "fs";
import * as fs2 from "fs";
import defaultValue from "fs";
import {readFileSync} from "fs";
console.log(fs2, readFileSync, defaultValue);

================================================================================
TestImportFormsWithMinifyIdentifiersAndNoBundle
---------- /out.js ----------
import "foo";
import {} from "foo";
import * as o from "foo";
import {a as f, b as r} from "foo";
import m from "foo";
import i, * as t from "foo";
import p, {a2 as s, b as n} from "foo";
const a = [
  import("foo"),
  function() {
    return import("foo");
  }
];
console.log(o, f, r, m, i, t, p, s, n, a);

================================================================================
TestImportFormsWithNoBundle
---------- /out.js ----------
import "foo";
import {} from "foo";
import * as ns from "foo";
import {a, b as c} from "foo";
import def from "foo";
import def2, * as ns2 from "foo";
import def3, {a2, b as c3} from "foo";
const imp = [
  import("foo"),
  function nested() {
    return import("foo");
  }
];
console.log(ns, a, c, def, def2, ns2, def3, a2, c3, imp);

================================================================================
TestImportMetaCommonJS
---------- /out.js ----------
// /entry.js
const import_meta = {};
console.log(import_meta.url, import_meta.path);

================================================================================
TestImportMetaES6
---------- /out.js ----------
// /entry.js
console.log(import.meta.url, import.meta.path);

================================================================================
TestImportMetaNoBundle
---------- /out.js ----------
console.log(import.meta.url, import.meta.path);

================================================================================
TestImportMissingCommonJS
---------- /out.js ----------
// /foo.js
var require_foo = __commonJS((exports) => {
  exports.x = 123;
});

// /entry.js
const foo = __toModule(require_foo());
console.log(foo.default(foo.x, foo.y));

================================================================================
TestImportMissingNeitherES6NorCommonJS
---------- /out/named.js ----------
// /foo.js
console.log("no exports here");

// /named.js
console.log((void 0)(void 0, void 0));

---------- /out/star.js ----------
// /foo.js
console.log("no exports here");

// /star.js
console.log((void 0)(void 0, void 0));

---------- /out/star-capture.js ----------
// /foo.js
var require_foo = __commonJS(() => {
  console.log("no exports here");
});

// /star-capture.js
const ns = __toModule(require_foo());
console.log(ns);

---------- /out/bare.js ----------
// /foo.js
console.log("no exports here");

---------- /out/require.js ----------
// /foo.js
var require_foo = __commonJS(() => {
  console.log("no exports here");
});

// /require.js
console.log(require_foo());

---------- /out/import.js ----------
// /foo.js
var require_foo = __commonJS(() => {
  console.log("no exports here");
});

// /import.js
console.log(Promise.resolve().then(() => __toModule(require_foo())));

================================================================================
TestImportReExportES6Issue149
---------- /out.js ----------
// /import.js
import {h, render} from "preact";
const p = "p";

// /in2.jsx
const Internal = () => /* @__PURE__ */ h(p, null, " Test 2 ");

// /app.jsx
const App = () => /* @__PURE__ */ h(p, null, " ", /* @__PURE__ */ h(Internal, null), " T ");
render(/* @__PURE__ */ h(App, null), document.getElementById("app"));

================================================================================
TestInject
---------- /out.js ----------
// /inject.js
let obj = {};
let sideEffects = console.log("side effects");

// /node_modules/unused/index.js
console.log("This is unused but still has side effects");

// /replacement.js
let replace = {
  test() {
  }
};

// /re-export.js
const external_pkg = __toModule(require("external-pkg"));

// /entry.js
let sideEffects2 = console.log("this should be renamed");
let collide = 123;
console.log(obj.prop);
console.log(replace.test);
console.log(collide);
console.log(external_pkg.re_export);

================================================================================
TestInjectImportOrder
---------- /out.js ----------
// /inject-1.js
import "first";
console.log("first");

// /inject-2.js
import "second";
console.log("second");

// /entry.ts
import "third";
console.log("third");

================================================================================
TestInjectImportTS
---------- /out.js ----------
console.log("must be present");
console.log("here");

================================================================================
TestInjectJSX
---------- /out.js ----------
// /inject.js
function el() {
}

// /entry.jsx
console.log(/* @__PURE__ */ el("div", null));

================================================================================
TestInjectNoBundle
---------- /out.js ----------
let obj = {};
let sideEffects = console.log("side effects");
console.log("This is unused but still has side effects");
let replace = {
  test() {
  }
};
import {re_export} from "external-pkg";
let sideEffects2 = console.log("this should be renamed");
let collide = 123;
console.log(obj.prop);
console.log(replace.test);
console.log(collide);
console.log(re_export);

================================================================================
TestJSXImportsCommonJS
---------- /out.js ----------
// /custom-react.js
var require_custom_react = __commonJS((exports, module) => {
  module.exports = {};
});

// /entry.jsx
const custom_react = __toModule(require_custom_react());
console.log(/* @__PURE__ */ custom_react.elem("div", null), /* @__PURE__ */ custom_react.elem(custom_react.frag, null, "fragment"));

================================================================================
TestJSXImportsES6
---------- /out.js ----------
// /custom-react.js
function elem() {
}
function frag() {
}

// /entry.jsx
console.log(/* @__PURE__ */ elem("div", null), /* @__PURE__ */ elem(frag, null, "fragment"));

================================================================================
TestManyEntryPoints
---------- /out/e00.js ----------
// /shared.js
var shared_default = 123;

// /e00.js
console.log(shared_default);

---------- /out/e01.js ----------
// /shared.js
var shared_default = 123;

// /e01.js
console.log(shared_default);

---------- /out/e02.js ----------
// /shared.js
var shared_default = 123;

// /e02.js
console.log(shared_default);

---------- /out/e03.js ----------
// /shared.js
var shared_default = 123;

// /e03.js
console.log(shared_default);

---------- /out/e04.js ----------
// /shared.js
var shared_default = 123;

// /e04.js
console.log(shared_default);

---------- /out/e05.js ----------
// /shared.js
var shared_default = 123;

// /e05.js
console.log(shared_default);

---------- /out/e06.js ----------
// /shared.js
var shared_default = 123;

// /e06.js
console.log(shared_default);

---------- /out/e07.js ----------
// /shared.js
var shared_default = 123;

// /e07.js
console.log(shared_default);

---------- /out/e08.js ----------
// /shared.js
var shared_default = 123;

// /e08.js
console.log(shared_default);

---------- /out/e09.js ----------
// /shared.js
var shared_default = 123;

// /e09.js
console.log(shared_default);

---------- /out/e10.js ----------
// /shared.js
var shared_default = 123;

// /e10.js
console.log(shared_default);

---------- /out/e11.js ----------
// /shared.js
var shared_default = 123;

// /e11.js
console.log(shared_default);

---------- /out/e12.js ----------
// /shared.js
var shared_default = 123;

// /e12.js
console.log(shared_default);

---------- /out/e13.js ----------
// /shared.js
var shared_default = 123;

// /e13.js
console.log(shared_default);

---------- /out/e14.js ----------
// /shared.js
var shared_default = 123;

// /e14.js
console.log(shared_default);

---------- /out/e15.js ----------
// /shared.js
var shared_default = 123;

// /e15.js
console.log(shared_default);

---------- /out/e16.js ----------
// /shared.js
var shared_default = 123;

// /e16.js
console.log(shared_default);

---------- /out/e17.js ----------
// /shared.js
var shared_default = 123;

// /e17.js
console.log(shared_default);

---------- /out/e18.js ----------
// /shared.js
var shared_default = 123;

// /e18.js
console.log(shared_default);

---------- /out/e19.js ----------
// /shared.js
var shared_default = 123;

// /e19.js
console.log(shared_default);

---------- /out/e20.js ----------
// /shared.js
var shared_default = 123;

// /e20.js
console.log(shared_default);

---------- /out/e21.js ----------
// /shared.js
var shared_default = 123;

// /e21.js
console.log(shared_default);

---------- /out/e22.js ----------
// /shared.js
var shared_default = 123;

// /e22.js
console.log(shared_default);

---------- /out/e23.js ----------
// /shared.js
var shared_default = 123;

// /e23.js
console.log(shared_default);

---------- /out/e24.js ----------
// /shared.js
var shared_default = 123;

// /e24.js
console.log(shared_default);

---------- /out/e25.js ----------
// /shared.js
var shared_default = 123;

// /e25.js
console.log(shared_default);

---------- /out/e26.js ----------
// /shared.js
var shared_default = 123;

// /e26.js
console.log(shared_default);

---------- /out/e27.js ----------
// /shared.js
var shared_default = 123;

// /e27.js
console.log(shared_default);

---------- /out/e28.js ----------
// /shared.js
var shared_default = 123;

// /e28.js
console.log(shared_default);

---------- /out/e29.js ----------
// /shared.js
var shared_default = 123;

// /e29.js
console.log(shared_default);

---------- /out/e30.js ----------
// /shared.js
var shared_default = 123;

// /e30.js
console.log(shared_default);

---------- /out/e31.js ----------
// /shared.js
var shared_default = 123;

// /e31.js
console.log(shared_default);

---------- /out/e32.js ----------
// /shared.js
var shared_default = 123;

// /e32.js
console.log(shared_default);

---------- /out/e33.js ----------
// /shared.js
var shared_default = 123;

// /e33.js
console.log(shared_default);

---------- /out/e34.js ----------
// /shared.js
var shared_default = 123;

// /e34.js
console.log(shared_default);

---------- /out/e35.js ----------
// /shared.js
var shared_default = 123;

// /e35.js
console.log(shared_default);

---------- /out/e36.js ----------
// /shared.js
var shared_default = 123;

// /e36.js
console.log(shared_default);

---------- /out/e37.js ----------
// /shared.js
var shared_default = 123;

// /e37.js
console.log(shared_default);

---------- /out/e38.js ----------
// /shared.js
var shared_default = 123;

// /e38.js
console.log(shared_default);

---------- /out/e39.js ----------
// /shared.js
var shared_default = 123;

// /e39.js
console.log(shared_default);

================================================================================
TestMinifiedBundleCommonJS
---------- /out.js ----------
var n=e(r=>{r.foo=function(){return 123}}),u=e((j,t)=>{t.exports={test:!0}});const{foo:c}=n();console.log(c(),u());

================================================================================
TestMinifiedBundleES6
---------- /out.js ----------
function o(){return 123}o();console.log(o());

================================================================================
TestMinifiedBundleEndingWithImportantSemicolon
---------- /out.js ----------
(()=>{while(foo());})();

================================================================================
TestMinifiedExportsAndModuleFormatCommonJS
---------- /out.js ----------
// /foo/test.js
const t = {};
f(t, {
  foo: () => l
});
let l = 123;

// /bar/test.js
const r = {};
f(r, {
  bar: () => m
});
let m = 123;

// /entry.js
console.log(exports, module.exports, t, r);

================================================================================
TestMinifyArguments
---------- /out.js ----------
// /entry.js
function e(n = arguments) {
  let t;
}
function u(n = arguments) {
  let t;
}
function a(n = arguments) {
  let t;
}
e();
u();
a();

================================================================================
TestMinifyNestedLabelsNoBundle
---------- /out.js ----------
n:{l:{a:{b:{c:{d:{e:{f:{g:{h:{i:{j:{k:{m:{o:{p:{nl(`
`);q:{r:{s:{t:{u:{v:{w:{x:{y:{z:{A:{B:{C:{D:{E:{F:{nl(`
`);G:{H:{I:{J:{K:{L:{M:{N:{O:{P:{Q:{R:{S:{T:{U:{V:{nl(`
`);W:{X:{Y:{Z:{_:{$:{nn:{ln:{an:{bn:{cn:{dn:{en:{fn:{gn:{hn:{nl(`
`);jn:{kn:{mn:{on:{pn:{qn:{rn:{sn:{tn:{un:{vn:{wn:{xn:{yn:{zn:{An:{nl(`
`);Bn:{Cn:{Dn:{En:{Fn:{Gn:{Hn:{In:{Jn:{Kn:{Ln:{Mn:{Nn:{On:{Pn:{Qn:{nl(`
`);Rn:{Sn:{Tn:{Un:{Vn:{Wn:{Xn:{Yn:{Zn:{_n:{$n:{nl:{ll:{al:{bl:{cl:{nl(`
`);dl:{el:{fl:{gl:{hl:{il:{jl:{kl:{ml:{ol:{pl:{ql:{rl:{sl:{tl:{ul:{nl(`
`);vl:{wl:{xl:{yl:{zl:{Al:{Bl:{Cl:{Dl:{El:{Fl:{Gl:{Hl:{Il:{Jl:{Kl:{nl(`
`);Ll:{Ml:{Nl:{Ol:{Pl:{Ql:{Rl:{Sl:{Tl:{Ul:{Vl:{Wl:{Xl:{Yl:{Zl:{_l:{nl(`
`);$l:{na:{la:{aa:{ba:{ca:{da:{ea:{fa:{ga:{ha:{ia:{ja:{ka:{ma:{oa:{nl(`
`);pa:{qa:{ra:{sa:{ta:{ua:{va:{wa:{xa:{ya:{za:{Aa:{Ba:{Ca:{Da:{Ea:{nl(`
`);Fa:{Ga:{Ha:{Ia:{Ja:{Ka:{La:{Ma:{Na:{Oa:{Pa:{Qa:{Ra:{Sa:{Ta:{Ua:{nl(`
`);Va:{Wa:{Xa:{Ya:{Za:{_a:{$a:{nb:{lb:{ab:{bb:{cb:{db:{eb:{fb:{gb:{nl(`
`);hb:{ib:{jb:{kb:{mb:{ob:{pb:{qb:{rb:{sb:{tb:{ub:{vb:{wb:{xb:{yb:{nl(`
`);zb:{Ab:{Bb:{Cb:{Db:{Eb:{Fb:{Gb:{Hb:{Ib:{Jb:{Kb:{Lb:{Mb:{Nb:{Ob:{nl(`
`);Pb:{Qb:{Rb:{Sb:{Tb:{Ub:{Vb:{Wb:{Xb:{Yb:{Zb:{_b:{$b:{nc:{lc:{ac:{nl(`
`);bc:{cc:{dc:{ec:{fc:{gc:{hc:{ic:{jc:{kc:{mc:{oc:{pc:{qc:{rc:{sc:{nl(`
`);tc:{uc:{vc:{wc:{xc:{yc:{zc:{Ac:{Bc:{Cc:{Dc:{Ec:{Fc:{Gc:{Hc:{Ic:{nl(`
`);Jc:{Kc:{Lc:{Mc:{Nc:{Oc:{Pc:{Qc:{Rc:{Sc:{Tc:{Uc:{Vc:{Wc:{Xc:{Yc:{nl(`
`);Zc:{_c:{$c:{nd:{ld:{ad:{bd:{cd:{dd:{ed:{fd:{gd:{hd:;}}}}}}}}}}}}}}}}}nl(`
`)}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}nl(`
`)}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}nl(`
`)}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}nl(`
`)}}}}}}}}}}}}}}}}}}}}}}}}}}}

================================================================================
TestMinifyPrivateIdentifiersNoBundle
---------- /out.js ----------
class Foo {
  #a;
  foo = class {
    #s;
    #f;
    #r;
  };
  get #o() {
  }
  set #o(o) {
  }
}
class Bar {
  #a;
  foo = class {
    #s;
    #f;
    #r;
  };
  get #o() {
  }
  set #o(o) {
  }
}

================================================================================
TestMinifySiblingLabelsNoBundle
---------- /out.js ----------
a: {
  b: {
    if (x)
      break b;
    break a;
  }
}
a: {
  b: {
    if (x)
      break b;
    break a;
  }
}
a: {
  b: {
    if (x)
      break b;
    break a;
  }
}

================================================================================
TestMultipleEntryPointsSameNameCollision
---------- /out/a/entry.js ----------
// /common.js
let foo = 123;

// /a/entry.js
console.log(foo);

---------- /out/b/entry.js ----------
// /common.js
let foo = 123;

// /b/entry.js
console.log(foo);

================================================================================
TestNestedCommonJS
---------- /out.js ----------
// /foo.js
var require_foo = __commonJS((exports, module) => {
  module.exports = function() {
    return 123;
  };
});

// /entry.js
function nestedScope() {
  const fn = require_foo();
  console.log(fn());
}
nestedScope();

================================================================================
TestNestedES6FromCommonJS
---------- /out.js ----------
// /foo.js
var require_foo = __commonJS((exports) => {
  exports.fn = function() {
    return 123;
  };
});

// /entry.js
const foo = __toModule(require_foo());
(() => {
  console.log(foo.fn());
})();

================================================================================
TestNestedRequireWithoutCall
---------- /out.js ----------
// /entry.js
(() => {
  const req = require;
  req("./entry");
})();

================================================================================
TestNestedScopeBug
---------- /out.js ----------
// /entry.js
(() => {
  function a() {
    b();
  }
  {
    var b = () => {
    };
  }
  a();
})();

================================================================================
TestNewExpressionCommonJS
---------- /out.js ----------
// /foo.js
var require_foo = __commonJS((exports, module) => {
  class Foo {
  }
  module.exports = {Foo};
});

// /entry.js
new (require_foo()).Foo();

================================================================================
TestNodeModules
---------- /Users/user/project/out.js ----------
// /Users/user/project/node_modules/demo-pkg/index.js
var require_demo_pkg = __commonJS((exports, module) => {
  module.exports = function() {
    return 123;
  };
});

// /Users/user/project/src/entry.js
const demo_pkg = __toModule(require_demo_pkg());
console.log(demo_pkg.default());

================================================================================
TestOutbase
---------- /out/a/b/c.js ----------
// /a/b/c.js
console.log("c");

---------- /out/a/b/d.js ----------
// /a/b/d.js
console.log("d");

================================================================================
TestOutputExtensionRemappingDir
---------- /out/entry.notjs ----------
// /entry.js
console.log("test");

================================================================================
TestOutputExtensionRemappingFile
---------- /out.js ----------
// /entry.js
console.log("test");

================================================================================
TestProcessEnvNodeEnvWarning
---------- /out.js ----------
// /entry.js
console.log(process.env.NODE_ENV, process.env.NODE_ENV);

================================================================================
TestProcessEnvNodeEnvWarningDefine
---------- /out.js ----------
// /entry.js
console.log(null);

================================================================================
TestProcessEnvNodeEnvWarningNoBundle
---------- /out.js ----------
console.log(process.env.NODE_ENV);

================================================================================
TestProcessEnvNodeEnvWarningNode
---------- /out.js ----------
// /entry.js
console.log(process.env.NODE_ENV);

================================================================================
TestReExportCommonJSAsES6
---------- /out.js ----------
// /foo.js
var require_foo = __commonJS((exports) => {
  exports.bar = 123;
});

// /entry.js
const foo = __toModule(require_foo());
const export_bar = foo.bar;
export {
  export_bar as bar
};

================================================================================
TestReExportDefaultCommonJS
---------- /out.js ----------
// /bar.js
var require_bar = __commonJS((exports) => {
  __export(exports, {
    default: () => foo2
  });
  function foo2() {
    return exports;
  }
});

// /foo.js
const bar = __toModule(require_bar());

// /entry.js
bar.default();

================================================================================
TestReExportDefaultExternalCommonJS
---------- /out.js ----------
// /entry.js
__export(exports, {
  bar: () => bar.default,
  foo: () => foo.default
});
const foo = __toModule(require("foo"));

// /bar.js
const bar = __toModule(require("bar"));

================================================================================
TestReExportDefaultExternalES6
---------- /out.js ----------
// /entry.js
import {default as default3} from "foo";

// /bar.js
import {default as default2} from "bar";
export {
  default2 as bar,
  default3 as foo
};

================================================================================
TestReExportDefaultInternal
---------- /out.js ----------
// /foo.js
var foo_default = "foo";

// /bar.js
var bar_default = "bar";
export {
  bar_default as bar,
  foo_default as foo
};

================================================================================
TestReExportDefaultNoBundle
---------- /out.js ----------
export {default as foo} from "./foo";
export {default as bar} from "./bar";

================================================================================
TestReExportDefaultNoBundleCommonJS
---------- /out.js ----------
__export(exports, {
  bar: () => bar.default,
  foo: () => foo.default
});
const foo = __toModule(require("./foo"));
const bar = __toModule(require("./bar"));

================================================================================
TestReExportDefaultNoBundleES6
---------- /out.js ----------
import {default as default2} from "./foo";
import {default as default3} from "./bar";
export {
  default3 as bar,
  default2 as foo
};

================================================================================
TestReExportFSNode
---------- /out.js ----------
// /foo.js
import * as fs from "fs";
import {readFileSync} from "fs";
export {
  fs as f,
  readFileSync as rfs
};

================================================================================
TestRenameLabelsNoBundle
---------- /out.js ----------
foo: {
  bar: {
    if (x)
      break bar;
    break foo;
  }
}
foo2: {
  bar2: {
    if (x)
      break bar2;
    break foo2;
  }
}
foo: {
  bar: {
    if (x)
      break bar;
    break foo;
  }
}

================================================================================
TestRenamePrivateIdentifiersNoBundle
---------- /out.js ----------
class Foo {
  #foo;
  foo = class {
    #foo;
    #foo2;
    #bar;
  };
  get #bar() {
  }
  set #bar(x) {
  }
}
class Bar {
  #foo;
  foo = class {
    #foo2;
    #foo;
    #bar;
  };
  get #bar() {
  }
  set #bar(x) {
  }
}

================================================================================
TestRequireAndDynamicImportInvalidTemplate
---------- /out.js ----------
// /entry.js
require(tag`./b`);
require(`./${b}`);
import(tag`./b`);
import(`./${b}`);

================================================================================
TestRequireBadArgumentCount
---------- /out.js ----------
// /entry.js
require();
require("a", "b");

================================================================================
TestRequireChildDirCommonJS
---------- /out.js ----------
// /Users/user/project/src/dir/index.js
var require_dir = __commonJS((exports, module) => {
  module.exports = 123;
});

// /Users/user/project/src/entry.js
console.log(require_dir());

================================================================================
TestRequireChildDirES6
---------- /out.js ----------
// /Users/user/project/src/dir/index.js
var dir_default = 123;

// /Users/user/project/src/entry.js
console.log(dir_default);

================================================================================
TestRequireFSNode
---------- /out.js ----------
// /entry.js
return require("fs");

================================================================================
TestRequireFSNodeMinify
---------- /out.js ----------
return require("fs");

================================================================================
TestRequireJson
---------- /out.js ----------
// /test.json
var require_test = __commonJS((exports, module) => {
  module.exports = {
    a: true,
    b: 123,
    c: [null]
  };
});

// /entry.js
console.log(require_test());

================================================================================
TestRequireParentDirCommonJS
---------- /out.js ----------
// /Users/user/project/src/index.js
var require_src = __commonJS((exports, module) => {
  module.exports = 123;
});

// /Users/user/project/src/dir/entry.js
console.log(require_src());

================================================================================
TestRequireParentDirES6
---------- /out.js ----------
// /Users/user/project/src/index.js
var src_default = 123;

// /Users/user/project/src/dir/entry.js
console.log(src_default);

================================================================================
TestRequireResolve
---------- /out.js ----------
// /entry.js
console.log(require.resolve);
console.log(require.resolve());
console.log(require.resolve(foo));
console.log(require.resolve("a", "b"));
console.log(require.resolve("./present-file"));
console.log(require.resolve("./missing-file"));
console.log(require.resolve("./external-file"));
console.log(require.resolve("missing-pkg"));
console.log(require.resolve("external-pkg"));
console.log(require.resolve("@scope/missing-pkg"));
console.log(require.resolve("@scope/external-pkg"));
try {
  console.log(require.resolve("inside-try"));
} catch (e) {
}
if (false) {
  console.log(null);
}

================================================================================
TestRequireTxt
---------- /out.js ----------
// /test.txt
var require_test = __commonJS((exports, module) => {
  module.exports = "This is a test.";
});

// /entry.js
console.log(require_test());

================================================================================
TestRequireWithCallInsideTry
---------- /out.js ----------
// /entry.js
var require_entry = __commonJS((exports) => {
  try {
    const supportsColor = require("supports-color");
    if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
      exports.colors = [];
    }
  } catch (error) {
  }
});
export default require_entry();

================================================================================
TestRequireWithTemplate
---------- /out.js ----------
// /b.js
var require_b = __commonJS((exports) => {
  exports.x = 123;
});

// /a.js
console.log(require_b());
console.log(require_b());

================================================================================
TestRequireWithoutCall
---------- /out.js ----------
// /entry.js
const req = require;
req("./entry");

================================================================================
TestRequireWithoutCallInsideTry
---------- /out.js ----------
// /entry.js
try {
  oldLocale = globalLocale._abbr;
  var aliasedRequire = require;
  aliasedRequire("./locale/" + name);
  getSetGlobalLocale(oldLocale);
} catch (e) {
}

================================================================================
TestRuntimeNameCollisionNoBundle
---------- /out.js ----------
function __require() {
  return 123;
}
console.log(__require());

================================================================================
TestScopedExternalModuleExclusion
---------- /out.js ----------
// /index.js
import {Foo} from "@scope/foo";
import {Bar} from "@scope/foo/bar";
const foo2 = new Foo();
const bar2 = new Bar();
export {
  bar2 as bar,
  foo2 as foo
};

================================================================================
TestSimpleCommonJS
---------- /out.js ----------
// /foo.js
var require_foo = __commonJS((exports, module) => {
  module.exports = function() {
    return 123;
  };
});

// /entry.js
const fn = require_foo();
console.log(fn());

================================================================================
TestSimpleES6
---------- /out.js ----------
// /foo.js
function fn() {
  return 123;
}

// /entry.js
console.log(fn());

================================================================================
TestSourceMap
---------- /Users/user/project/out.js ----------
// /Users/user/project/src/bar.js
function bar() {
  throw new Error("test");
}

// /Users/user/project/src/entry.js
function foo() {
  bar();
}
foo();
//# sourceMappingURL=out.js.map

================================================================================
TestSwitchScopeNoBundle
---------- /out.js ----------
switch (foo) {
  default:
    var foo;
}
switch (bar) {
  default:
    let a;
}

================================================================================
TestThisInsideFunction
---------- /out.js ----------
// /entry.js
function foo(x = this) {
  console.log(this);
}
const obj = {
  foo(x = this) {
    console.log(this);
  }
};
class Foo {
  x = this;
  static y = this.z;
  foo(x = this) {
    console.log(this);
  }
  static bar(x = this) {
    console.log(this);
  }
}
new Foo(foo(obj));

================================================================================
TestThisOutsideFunction
---------- /out.js ----------
// /entry.js
var require_entry = __commonJS((exports) => {
  console.log(exports);
  console.log((x = exports) => exports);
  console.log({x: exports});
  console.log(class extends exports.foo {
  });
});
export default require_entry();

================================================================================
TestThisWithES6Syntax
---------- /out.js ----------
// /cjs.js
var require_cjs = __commonJS((exports) => {
  console.log(exports);
});

// /dummy.js
var require_dummy = __commonJS((exports) => {
  __export(exports, {
    dummy: () => dummy3
  });
  const dummy3 = 123;
});

// /es6-export-star.js
var require_es6_export_star = __commonJS((exports) => {
  __exportStar(exports, __toModule(require_dummy()));
  console.log(void 0);
});

// /es6-export-assign.ts
var require_es6_export_assign = __commonJS((exports, module) => {
  console.log(void 0);
  module.exports = 123;
});

// /es6-ns-export-variable.ts
var require_es6_ns_export_variable = __commonJS((exports) => {
  var ns2;
  (function(ns3) {
    ns3.foo = 123;
  })(ns2 || (ns2 = {}));
  console.log(exports);
});

// /es6-ns-export-function.ts
var require_es6_ns_export_function = __commonJS((exports) => {
  var ns2;
  (function(ns3) {
    function foo() {
    }
    ns3.foo = foo;
  })(ns2 || (ns2 = {}));
  console.log(exports);
});

// /es6-ns-export-async-function.ts
var require_es6_ns_export_async_function = __commonJS((exports) => {
  var ns2;
  (function(ns3) {
    async function foo() {
    }
    ns3.foo = foo;
  })(ns2 || (ns2 = {}));
  console.log(exports);
});

// /es6-ns-export-enum.ts
var require_es6_ns_export_enum = __commonJS((exports) => {
  var ns2;
  (function(ns3) {
    let Foo3;
    (function(Foo4) {
    })(Foo3 = ns3.Foo || (ns3.Foo = {}));
  })(ns2 || (ns2 = {}));
  console.log(exports);
});

// /es6-ns-export-const-enum.ts
var require_es6_ns_export_const_enum = __commonJS((exports) => {
  var ns2;
  (function(ns3) {
    let Foo3;
    (function(Foo4) {
    })(Foo3 = ns3.Foo || (ns3.Foo = {}));
  })(ns2 || (ns2 = {}));
  console.log(exports);
});

// /es6-ns-export-module.ts
var require_es6_ns_export_module = __commonJS((exports) => {
  console.log(exports);
});

// /es6-ns-export-namespace.ts
var require_es6_ns_export_namespace = __commonJS((exports) => {
  console.log(exports);
});

// /es6-ns-export-class.ts
var require_es6_ns_export_class = __commonJS((exports) => {
  var ns2;
  (function(ns3) {
    class Foo3 {
    }
    ns3.Foo = Foo3;
  })(ns2 || (ns2 = {}));
  console.log(exports);
});

// /es6-ns-export-abstract-class.ts
var require_es6_ns_export_abstract_class = __commonJS((exports) => {
  var ns2;
  (function(ns3) {
    class Foo3 {
    }
    ns3.Foo = Foo3;
  })(ns2 || (ns2 = {}));
  console.log(exports);
});

// /entry.js
const cjs = __toModule(require_cjs());

// /es6-import-stmt.js
const dummy = __toModule(require_dummy());
console.log(void 0);

// /es6-import-assign.ts
const x = require_dummy();
console.log(void 0);

// /es6-import-dynamic.js
Promise.resolve().then(() => __toModule(require_dummy()));
console.log(void 0);

// /es6-import-meta.js
console.log(void 0);

// /es6-expr-import-dynamic.js
Promise.resolve().then(() => __toModule(require_dummy()));
console.log(void 0);

// /es6-expr-import-meta.js
console.log(void 0);

// /es6-export-variable.js
console.log(void 0);

// /es6-export-function.js
console.log(void 0);

// /es6-export-async-function.js
console.log(void 0);

// /es6-export-enum.ts
var Foo;
(function(Foo3) {
})(Foo || (Foo = {}));
console.log(void 0);

// /es6-export-const-enum.ts
var Foo2;
(function(Foo3) {
})(Foo2 || (Foo2 = {}));
console.log(void 0);

// /es6-export-module.ts
console.log(void 0);

// /es6-export-namespace.ts
console.log(void 0);

// /es6-export-class.js
console.log(void 0);

// /es6-export-abstract-class.ts
console.log(void 0);

// /es6-export-default.js
console.log(void 0);

// /es6-export-clause.js
console.log(void 0);

// /es6-export-clause-from.js
const dummy2 = __toModule(require_dummy());
console.log(void 0);

// /entry.js
const es6_export_star = __toModule(require_es6_export_star());

// /es6-export-star-as.js
const ns = __toModule(require_dummy());
console.log(void 0);

// /entry.js
const es6_export_assign = __toModule(require_es6_export_assign());

// /es6-export-import-assign.ts
const x2 = require_dummy();
console.log(void 0);

// /entry.js
const es6_ns_export_variable = __toModule(require_es6_ns_export_variable());
const es6_ns_export_function = __toModule(require_es6_ns_export_function());
const es6_ns_export_async_function = __toModule(require_es6_ns_export_async_function());
const es6_ns_export_enum = __toModule(require_es6_ns_export_enum());
const es6_ns_export_const_enum = __toModule(require_es6_ns_export_const_enum());
const es6_ns_export_module = __toModule(require_es6_ns_export_module());
const es6_ns_export_namespace = __toModule(require_es6_ns_export_namespace());
const es6_ns_export_class = __toModule(require_es6_ns_export_class());
const es6_ns_export_abstract_class = __toModule(require_es6_ns_export_abstract_class());

================================================================================
TestTopLevelAwaitNoBundle
---------- /out.js ----------
await foo;
for await (foo of bar)
  ;

================================================================================
TestTopLevelAwaitNoBundleES6
---------- /out.js ----------
await foo;
for await (foo of bar)
  ;

================================================================================
TestTopLevelReturn
---------- /out.js ----------
// /foo.js
var require_foo = __commonJS((exports) => {
  __export(exports, {
    foo: () => foo3
  });
  if (Math.random() < 0.5)
    return;
  function foo3() {
  }
});

// /entry.js
const foo = __toModule(require_foo());
foo.foo();

================================================================================
TestTypeofRequireBadPatterns
---------- /out.js ----------
// /entry.js
console.log([
  false,
  require,
  true,
  notRequire,
  typeof notRequire == "function" && require,
  false,
  require,
  true,
  notRequire,
  typeof notRequire == "function" && require
]);

================================================================================
TestTypeofRequireBundle
---------- /out.js ----------
// /entry.js
console.log([
  "function",
  true,
  false,
  true,
  false
]);

================================================================================
TestTypeofRequireNoBundle
---------- /out.js ----------
console.log([
  typeof require,
  typeof require == "function",
  typeof require == "function" && require,
  typeof require == "function",
  typeof require == "function" && require
]);

================================================================================
TestUseStrictDirectiveMinifyNoBundle
---------- /out.js ----------
"use strict";a,b;

================================================================================
TestWarningsInsideNodeModules
---------- /out.js ----------
// /return-asi.js
var require_return_asi = __commonJS(() => {
  return;
});

// /node_modules/return-asi.js
var require_return_asi2 = __commonJS(() => {
  return;
});

// /dup-case.js
switch (x) {
  case 0:
  case 0:
}

// /node_modules/dup-case.js
switch (x) {
  case 0:
  case 0:
}

// /not-in.js
!a in b;

// /node_modules/not-in.js
!a in b;

// /not-instanceof.js
!a instanceof b;

// /node_modules/not-instanceof.js
!a instanceof b;

// /entry.js
const return_asi = __toModule(require_return_asi());
const return_asi2 = __toModule(require_return_asi2());

// /bad-typeof.js
typeof x == "null";

// /node_modules/bad-typeof.js
typeof x == "null";

// /equals-neg-zero.js
x === -0;

// /node_modules/equals-neg-zero.js
x === -0;

// /equals-nan.js
x === NaN;

// /node_modules/equals-nan.js
x === NaN;

// /equals-object.js
x === [];

// /node_modules/equals-object.js
x === [];

// /write-getter.js
class Foo {
  get #foo() {
  }
  foo() {
    this.#foo = 123;
  }
}

// /node_modules/write-getter.js
class Foo2 {
  get #foo() {
  }
  foo() {
    this.#foo = 123;
  }
}

// /read-setter.js
class Foo3 {
  set #foo(x2) {
  }
  foo() {
    return this.#foo;
  }
}

// /node_modules/read-setter.js
class Foo4 {
  set #foo(x2) {
  }
  foo() {
    return this.#foo;
  }
}

// /delete-super.js
class Foo5 extends Bar {
  foo() {
    delete super.foo;
  }
}

// /node_modules/delete-super.js
class Foo6 extends Bar {
  foo() {
    delete super.foo;
  }
}

================================================================================
TestWithStatementTaintingNoBundle
---------- /out.js ----------
(() => {
  let e = 1;
  let outer = 2;
  let outerDead = 3;
  with ({}) {
    var hoisted = 4;
    let t = 5;
    hoisted++;
    t++;
    if (1)
      outer++;
    if (0)
      outerDead++;
  }
  if (1) {
    hoisted++;
    e++;
    outer++;
    outerDead++;
  }
})();
